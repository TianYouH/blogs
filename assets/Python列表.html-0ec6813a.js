import{_ as n,p as s,q as a,a1 as p}from"./framework-8fa3e4ce.js";const t={},e=p(`<h1 id="python-列表" tabindex="-1"><a class="header-anchor" href="#python-列表" aria-hidden="true">#</a> Python 列表</h1><p>序列是 Python 中最基本的数据结构。</p><p>序列中的每个值都有对应的位置值，称之为索引，第一个索引是 0，第二个索引是 1，依此类推。</p><p>列表可以存储<strong>任何类型</strong>的数据</p><h2 id="创建列表" tabindex="-1"><a class="header-anchor" href="#创建列表" aria-hidden="true">#</a> 创建列表</h2><ol><li>基本语法[]创建</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Google&#39;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>使用list()创建</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># []</span>
c <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">&quot;nihao&quot;</span><span class="token punctuation">)</span> <span class="token comment"># [&#39;n&#39;, &#39;i&#39;, &#39;h&#39;, &#39;a&#39;, &#39;o&#39;]</span>
b <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span>
d <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [3, 5, 7, 9, 11, 13]</span>
<span class="token comment"># 推导式生成列表</span>
e <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment"># [0, 2, 4, 6, 8]</span>
f <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x<span class="token operator">%</span><span class="token number">9</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># [0, 18, 36, 54, 72, 90, 108, 126, 144, 162, 180, 198]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用行为" tabindex="-1"><a class="header-anchor" href="#常用行为" aria-hidden="true">#</a> 常用行为</h2><h3 id="增加" tabindex="-1"><a class="header-anchor" href="#增加" aria-hidden="true">#</a> 增加</h3><ol><li>append() 在列表末尾添加新的对象</li><li>extend() 函数用于在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）。</li><li>insert() 将对象插入列表</li><li>+运算符 将原始列表的元素和新列表的元素复制到新列表对象中涉及大量复制操作，不建议操作大量元素。</li><li>*运算符 使用乘法扩展列表，生成一个新列表，新列表元素时原列表元素的多次重复。</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment"># [5]</span>
a<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [5, 0, 1, 2]</span>
a<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">999</span><span class="token punctuation">)</span> <span class="token comment"># [5, 999, 0, 1, 2]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2457271522752</span>
a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span> <span class="token comment"># [5, 999, 0, 1, 2, 50]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 2457271418816</span>
b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">3</span> <span class="token comment"># [1, 2, 3, 1, 2, 3, 1, 2, 3]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","Python列表.html.vue"]]);export{r as default};
