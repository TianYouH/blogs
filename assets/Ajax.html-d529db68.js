import{_ as o,M as p,p as c,q as i,R as n,t as s,N as t,a1 as e}from"./framework-8fa3e4ce.js";const l={},r=e(`<h1 id="ajax" tabindex="-1"><a class="header-anchor" href="#ajax" aria-hidden="true">#</a> Ajax</h1><h3 id="xmlhttprequest" tabindex="-1"><a class="header-anchor" href="#xmlhttprequest" aria-hidden="true">#</a> XMLHttpRequest</h3><ol><li>请求</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// get请求</span>
<span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot; /api&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//这里的函数异步执行，可参考之前JS 基础中的异步模块</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">alert</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>xhr.readyState</li></ol><table><thead><tr><th style="text-align:center;">状态码</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td>(未初始化)还没有调用send(方法</td></tr><tr><td style="text-align:center;">1</td><td>(载入)已调用send()方法，正在发送请求</td></tr><tr><td style="text-align:center;">2</td><td>(载入完成) send()方法执行完成，已经接收到全部响应内容</td></tr><tr><td style="text-align:center;">3</td><td>(交互）正在解析响应内容</td></tr><tr><td style="text-align:center;">4</td><td>(完成）响应内容解析完成，可以在客户端调用</td></tr></tbody></table><ol start="2"><li>xhr.status</li></ol><table><thead><tr><th style="text-align:center;">状态码</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">2xx</td><td>表示成功处理请求，如200</td></tr><tr><td style="text-align:center;">3xx</td><td>需要重定向，浏览器直接跳转，如301 302 304</td></tr><tr><td style="text-align:center;">4xx</td><td>客户端请求错误，如404 403</td></tr><tr><td style="text-align:center;">5xx</td><td>服务器端错误</td></tr></tbody></table><h3 id="fetch-api" tabindex="-1"><a class="header-anchor" href="#fetch-api" aria-hidden="true">#</a> Fetch Api</h3><p>Fetch API 提供了一个获取资源的接口（包括跨域请求）。<br> 任何使用过 XMLHttpRequest 的人都能轻松上手，而且新的 API 提供了更强大和灵活的功能集。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;http://example.com/movies.json&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),u={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"第三方-axios-ajax",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#第三方-axios-ajax","aria-hidden":"true"},"#"),s(" 第三方 axios $.ajax")],-1),k={href:"https://axios-http.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://api.jquery.com/category/ajax/",target:"_blank",rel:"noopener noreferrer"},m=e(`<h3 id="跨域-同源策略-跨域解决方案" tabindex="-1"><a class="header-anchor" href="#跨域-同源策略-跨域解决方案" aria-hidden="true">#</a> 跨域:同源策略，跨域解决方案</h3><ol><li>同源策略</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ajax请求时，浏览器要求当前网页和server 必须同源（安全)
同源: 协议、域名、端口，三者必须一致
前端: http://a.com:8080/; server:https://b.com/api/xxx;

加载图片css js 可无视同源策略
&lt;img src=跨域的图片地址/&gt;
&lt;link href=跨域的css地址/&gt;
&lt;script src=跨域的js地址&gt;&lt;/script&gt;

&lt;img /&gt;可用于统计打点，可使用第三方统计服务
&lt;link /&gt; &lt;script&gt;可使用CDN ，CDN一般都是外域
&lt;script&gt;可实现JSONP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>跨域</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>所有的跨域，都必须经过server端允许和配合
未经server端允许就实现跨域，说明浏览器有漏洞危险信号
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>JSONP</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>访问https://imooc.com/，服务端一定返回一个html文件吗?
服务器可以任意动态拼接数据返回，只要符合html格式要求
同理于&lt;script src= &quot;https://imooc.com/getData.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;可绕过跨域限制
服务器可以任意动态拼接数据返回
所以，&lt;script&gt;就可以获得跨域的数据，只要服务端愿意返回
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>CORS(服务端支持)</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//第二个参数填写允许跨域的域名称,不建议直接写“*&quot;</span>
response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://localhost:8011&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X-Requested-with&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span>
  <span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;PUT,POST,GET,DELETE,OPTIONS&quot;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//接收跨域的cookie</span>
response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Credentials&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function h(b,x){const a=p("ExternalLinkIcon");return c(),i("div",null,[r,n("p",null,[n("a",u,[s("使用 Fetch"),t(a)])]),d,n("p",null,[n("a",k,[s("axios"),t(a)])]),n("p",null,[n("a",v,[s("jquery"),t(a)])]),m])}const f=o(l,[["render",h],["__file","Ajax.html.vue"]]);export{f as default};
