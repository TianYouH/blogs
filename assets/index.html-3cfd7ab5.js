import{_ as e,p as o,q as d,a1 as c}from"./framework-8fa3e4ce.js";const i={},a=c('<h1 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> HTML</h1><h2 id="html5-声明" tabindex="-1"><a class="header-anchor" href="#html5-声明" aria-hidden="true">#</a> HTML5 声明</h2><p>HTML5 声明</p><p><code>&lt;!DOCTYPE html&gt;</code></p><p><code>&lt;!DOCTYPE&gt;</code> 声明必须是 HTML 文档的第一行，位于 <code>&lt;html&gt;</code> 标签之前。</p><p><code>&lt;!DOCTYPE&gt;</code> 声明不是 HTML 标签；它是指示 web 浏览器关于页面使用哪个 HTML 版本进行编写的指令。</p><p>在 HTML 4.01 中，<code>&lt;!DOCTYPE&gt;</code> 声明引用 DTD，因为 HTML 4.01 基于 SGML。DTD 规定了标记语言的规则，这样浏览器才能正确地呈现内容。</p><p>HTML5 不基于 SGML，所以不需要引用 DTD。</p><h2 id="块状元素-内联元素" tabindex="-1"><a class="header-anchor" href="#块状元素-内联元素" aria-hidden="true">#</a> 块状元素&amp;内联元素</h2><p>block 块级元素、inline 内联元素<br> inline-block 内联块元素，表现为同行显示并可修改宽高内外边距等属性</p><p>块状元素： <code>address</code>、<code>blockquote</code>、<code>center</code>、<code>dir</code>、<code> div</code>、<code>dl</code>、<code>fieldset</code>、<code>form</code>、<code>h1</code>、<code>h2</code>、<code>h3</code>、<code>h4</code>、<code>h5</code>、<code>h6</code>、<code>hr</code></p><p>内联元素：<code>a</code>、<code>abbr</code>、<code>acronym</code>、<code>b</code>、<code>bdo</code>、<code>big</code>、<code>br</code>、<code>cite</code>、<code>code</code>、<code>dfn</code>、<code>em</code>、<code>font</code>、<code>i</code>、<code>img</code>、<code>input</code>、<code>kbd</code>、<code>label</code>、<code>q</code>、<code>s</code>、<code>button</code></p><h2 id="html5-中的一些新特性" tabindex="-1"><a class="header-anchor" href="#html5-中的一些新特性" aria-hidden="true">#</a> HTML5 中的一些新特性</h2><ul><li>用于绘画的<code>canvas</code>元素</li><li>用于媒介回放的<code>video</code>、<code>audio</code>元素</li><li>对本地离线存储的更好的支持</li><li>新的表单控件，如：<code>calendar</code>、<code>date</code>、<code>time</code>、<code>email</code>、<code>url</code>、<code>search</code></li><li>语义化标签，如：<code>header</code>、<code>footer</code>、<code>nav</code>、<code>section</code>、<code>article</code>、<code>main</code></li><li>新的特殊内容元素，如：<code>article</code>、<code>footer</code>、<code>header</code>、<code>nav</code>、<code>section</code></li><li>地理定位：使用getCurrentPosition()方法来获取用户的位置，从而实现队地理位置的定位</li><li>拖放API：通过给标签元素设置属性draggable值为true，能够实现对目标元素的拖动</li><li>Web Storage：Localstorage和SessionStorage</li><li>Websocket：长连接</li><li>svg绘图</li><li>Web Worker：Web Worker通过加载一个脚本文件，进而创建一个独立工作的线程，在主线程之外运行，worker线程运行- 结束之后会把结果返回给主线程，worker线程可以处理一些计算密集型的任务，这样主线程就会变得相对轻松，这并不是- 说JS具备了多线程的能力，而实浏览器作为宿主环境提供了一个JS多线程运行的环境。</li></ul>',14),t=[a];function l(r,h){return o(),d("div",null,t)}const s=e(i,[["render",l],["__file","index.html.vue"]]);export{s as default};
