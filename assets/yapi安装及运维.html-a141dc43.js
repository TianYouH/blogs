import{_ as a,p as n,q as e,a1 as s}from"./framework-8fa3e4ce.js";const i={},p=s(`<h1 id="yapi安装及运维" tabindex="-1"><a class="header-anchor" href="#yapi安装及运维" aria-hidden="true">#</a> YApi安装及运维</h1><h3 id="环境要求" tabindex="-1"><a class="header-anchor" href="#环境要求" aria-hidden="true">#</a> 环境要求</h3><ul><li>Node.js (v7.6 或以上)</li><li>MongoDB (v2.6 或以上)</li></ul><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p>使用官方提供的 yapi-cli 工具，部署 YApi 平台是非常容易的。执行 yapi server 启动可视化部署程序，输入相应的配置和点击开始部署，就能完成整个网站的部署。部署完成之后，可按照提示信息，执行 node/{网站路径/server/app.js} 启动服务器。在浏览器打开指定url, 点击登录输入您刚才设置的管理员邮箱，默认密码为 ymfe.org 登录系统（默认密码可在个人中心修改）。</p><ol><li><code>npm install -g yapi-cli --registry https://registry.npm.taobao.org</code></li><li><code>yapi server</code></li></ol><p>或</p><ol><li>克隆代码库：<code>git clone https://github.com/YMFE/yapi.git</code></li><li>安装依赖：<code>cd yapi &amp;&amp; npm install --production --registry https://registry.npm.taobao.org</code></li><li>启动YAPI：<code>node server/app.js</code></li></ol><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><ol><li>创建管理员账号：在页面上注册一个账号并将其设置为管理员账号</li><li>配置SMTP：如果需要使用邮件通知功能，则需要在config.json文件中配置SMTP</li><li>备份数据：使用mongodump命令备份MongoDB数据库。</li></ol><h3 id="服务管理" tabindex="-1"><a class="header-anchor" href="#服务管理" aria-hidden="true">#</a> 服务管理</h3><p>利用pm2方便服务管理维护。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> pm2 <span class="token parameter variable">-g</span>  //安装pm2
<span class="token builtin class-name">cd</span>  <span class="token punctuation">{</span>项目目录<span class="token punctuation">}</span>
pm2 start <span class="token string">&quot;vendors/server/app.js&quot;</span> <span class="token parameter variable">--name</span> yapi //pm2管理yapi服务
pm2 info yapi //查看服务信息
pm2 stop yapi //停止服务
pm2 restart yapi //重启服务
</code></pre></div><h3 id="版本升级" tabindex="-1"><a class="header-anchor" href="#版本升级" aria-hidden="true">#</a> 版本升级</h3><p>升级项目版本是非常容易的，并且不会影响已有的项目数据，只会同步 vendors 目录下的源码文件。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span>  <span class="token punctuation">{</span>项目目录<span class="token punctuation">}</span>
yapi <span class="token function">ls</span> //查看版本号列表
yapi update //更新到最新版本
yapi update <span class="token parameter variable">-v</span> <span class="token punctuation">{</span>Version<span class="token punctuation">}</span> //更新到指定版本
</code></pre></div>`,16),t=[p];function o(r,l){return n(),e("div",null,t)}const d=a(i,[["render",o],["__file","yapi安装及运维.html.vue"]]);export{d as default};
