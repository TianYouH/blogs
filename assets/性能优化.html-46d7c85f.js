import{_ as t,M as o,p as n,q as s,R as e,t as a,N as d,a1 as l}from"./framework-8fa3e4ce.js";const p={},c=l('<h1 id="性能优化" tabindex="-1"><a class="header-anchor" href="#性能优化" aria-hidden="true">#</a> 性能优化</h1><h2 id="性能优化-1" tabindex="-1"><a class="header-anchor" href="#性能优化-1" aria-hidden="true">#</a> 性能优化</h2><p>多使用内存、缓存或其他方法</p><p>减少CPU计算量，减少网络加载耗时</p><p>(适用于所有编程的性能优化——空间换时间)</p><h2 id="如何入手" tabindex="-1"><a class="header-anchor" href="#如何入手" aria-hidden="true">#</a> 如何入手</h2><h3 id="让加载更快-静态资源" tabindex="-1"><a class="header-anchor" href="#让加载更快-静态资源" aria-hidden="true">#</a> 让加载更快 静态资源</h3><p>减少资源体积︰压缩代码</p><p>减少访问次数:合并代码，懒加载，SSR服务器端渲染，缓存<br> SSR： 服务器端渲染:将网页和数据一起加载，一起渲染 非SSR（前后端分离):先加载网页，再加载数据，再渲染数据</p><p>使用更快的网络:CDN</p><p>分片：指得是将资源分布到不同的主机，这是为了突破浏览器对同一台主机建立tcp连接的数量限制，一般为6~8个。现代网站的资源数量有50~100个很常见，所以将资源分布到不同的主机上，可以建立更多的tcp请求，降低请求耗时，从而提升网页速度。</p><p>升级协议：可以升级我们的网络协议，比如使用HTTP2，quic 之类的，代替之前的http1.1，从协议层优化资源的加载。</p><h3 id="让渲染更快" tabindex="-1"><a class="header-anchor" href="#让渲染更快" aria-hidden="true">#</a> 让渲染更快</h3><ol><li>防止阻塞渲染</li></ol><p>CSS放在head ,JS放在body最下面</p><ol start="2"><li>减少重绘和回流</li></ol><p>js尽量少访问dom节点和css 属性</p><p>尽可能的为产生动画的 HTML 元素使用 fixed 或 absolute 的 position ，那么修改他们的 CSS 是不会 Reflow 的</p><p>img标签要设置高宽，以减少重绘重排</p><p>把DOM离线后修改，如将一个dom脱离文档流，比如display：none ，再修改属性，这里只发生一次回流。</p><p>尽量用 transform 来做形变和位移，不会造成回流</p><ol start="3"><li>提高代码质量</li></ol><p>1）html：<br> dom的层级尽量不要太深，否则会增加dom树构建的时间，js访问深层的dom也会造成更大的负担。 meta标签里需要定义文档的编码，便于浏览器解析</p><p>2）css：<br> 减少 CSS 嵌套层级和选择适当的选择器，<br> 对于首屏的关键css 可以使用style标签内联。</p><p>3）js：<br> 减少通过JavaScript代码修改元素样式，尽量使用修改class名方式操作样式或动画<br> 访问dom节点时需要对dom节点转存，防止循环中重复访问dom节点造成性能损耗。<br> 慎用 定时器 和 计时器， 使用完后需要销毁。<br> 用于复杂计算的js代码可以放在worker进程中运行<br> 对于一些高频的回调需要对其节流和消抖，就是 debounce 和 throttle 这两个函数。比如scroll和touch事件<br> 懒加载（图片懒加载，上滑加载更多)<br> 尽早开始执行JS，用DOMContentLoaded触发</p>',25),i=e("br",null,null,-1),h={href:"https://segmentfault.com/a/1190000016458627",target:"_blank",rel:"noopener noreferrer"};function _(b,m){const r=o("ExternalLinkIcon");return n(),s("div",null,[c,e("blockquote",null,[e("p",null,[a("ref："),i,e("a",h,[a("前端阶段性总结（二）：页面渲染机制与性能优化"),d(r)])])])])}const f=t(p,[["render",_],["__file","性能优化.html.vue"]]);export{f as default};
