import{_ as e,p as t,q as l,a1 as i}from"./framework-8fa3e4ce.js";const a={},r=i('<h1 id="环境构建" tabindex="-1"><a class="header-anchor" href="#环境构建" aria-hidden="true">#</a> 环境构建</h1><h2 id="方案一" tabindex="-1"><a class="header-anchor" href="#方案一" aria-hidden="true">#</a> 方案一：</h2><p>NextJS（服务端渲染:SSR）</p><ul><li>完善的React项目架构，搭建轻松</li><li>自带数据同步策略，解决同构项目的最大难点</li><li>丰富的插件帮助我们增加各种功能</li><li>灵活的配置根据你的需求自定义</li></ul><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h3><ul><li>手动创建的步骤： <ol><li>新建目录</li><li>npm init -y</li><li>yarn add react react-dom next</li><li>创建pages folder</li><li>package.json中增加scripts: <ul><li>&quot;dev&quot;: &quot;next&quot;</li><li>&quot;build&quot;: &quot;next build&quot;</li><li>&quot;start&quot;: &quot;next start&quot;</li></ul></li><li>在pages folder中，创建index.js页面，页面内不需要再引入import React from &#39;react&#39; <ul><li><code>export default () =&gt; &lt;span&gt;Index&lt;/span&gt;</code></li></ul></li><li>启动: yarn dev</li></ol></li><li>脚手架创建create-next-app <ul><li>create-next-app <code>&lt;project-name&gt;</code></li></ul></li></ul><h2 id="方案二" tabindex="-1"><a class="header-anchor" href="#方案二" aria-hidden="true">#</a> 方案二：</h2>',7),o=[r];function d(n,c){return t(),l("div",null,o)}const s=e(a,[["render",d],["__file","环境构建.html.vue"]]);export{s as default};
