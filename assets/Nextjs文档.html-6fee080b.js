import{_ as p,M as o,p as c,q as l,R as n,t as s,N as t,a1 as e}from"./framework-8fa3e4ce.js";const i={},u={id:"nextjs-文档",tabindex:"-1"},r=n("a",{class:"header-anchor",href:"#nextjs-文档","aria-hidden":"true"},"#",-1),k={href:"https://www.nextjs.cn/",target:"_blank",rel:"noopener noreferrer"},d=e('<h2 id="渲染流程" tabindex="-1"><a class="header-anchor" href="#渲染流程" aria-hidden="true">#</a> 渲染流程</h2><h3 id="客户端请求" tabindex="-1"><a class="header-anchor" href="#客户端请求" aria-hidden="true">#</a> 客户端请求</h3><ol><li>开始</li><li>浏览器发起/page请求</li><li>koa接收到请求，并调用nextjs</li><li>nextjs开始渲染</li><li>调用app的getInitialProps</li><li>调用页面的getInitialProps</li><li>渲染出最终HTML</li><li>返回给浏览器，渲染</li><li>结束</li></ol><h3 id="客户端路由跳转" tabindex="-1"><a class="header-anchor" href="#客户端路由跳转" aria-hidden="true">#</a> 客户端路由跳转</h3><ol><li>开始</li><li>点击链接按钮</li><li>异步加载页面的组件js</li><li>调用页面的getInitialProps</li><li>数据返回，路由变化</li><li>渲染新的页面</li><li>结束</li></ol><h2 id="目录结构" tabindex="-1"><a class="header-anchor" href="#目录结构" aria-hidden="true">#</a> 目录结构</h2><ul><li>📁.next</li><li>📁node_modules</li><li>📁pages 包含的每个文件都是页面上的一个路由 <ul><li>📄_app.js</li></ul></li><li>📄server.js</li></ul>',7),v={id:"页面跳转",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#页面跳转","aria-hidden":"true"},"#",-1),g={href:"https://nextjs-cn.com/docs/api-reference/next/link",target:"_blank",rel:"noopener noreferrer"},b=e(`<ul><li>link 组件 <ul><li>进行前端路由跳转</li><li>自身不渲染任何内容，需要指定渲染内容</li><li>监听传入节点 onclick 事件</li><li>只接受唯一结点，不支持兄弟节点</li></ul></li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&quot;next/link&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/about<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">About Us</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Home<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Router 模块手动跳转</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/router&#39;</span>

<span class="token keyword">function</span> <span class="token function">ActiveLink</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children<span class="token punctuation">,</span> href <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> style <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">marginRight</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> router<span class="token punctuation">.</span>asPath <span class="token operator">===</span> href <span class="token operator">?</span> <span class="token string">&#39;red&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>href<span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> ActiveLink
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),h={id:"动态路由",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#动态路由","aria-hidden":"true"},"#",-1),x={href:"https://nextjs-cn.com/docs/routing/dynamic-routes",target:"_blank",rel:"noopener noreferrer"},y=e(`<p>nextjs中实现路由的信息附带，只能通过query，不能使用params。</p><p>发起query请求</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// router.push(&#39;/router/dynamic-parameters?id=456&#39;)</span>
router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;/router/dynamic-parameters&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;12345&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取动态参数</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/router&#39;</span>
<span class="token keyword">import</span> Comp <span class="token keyword">from</span> <span class="token string">&#39;../components/comp&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">A</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> router <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Comp</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>router<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Comp</span></span><span class="token punctuation">&gt;</span></span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/router&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">Post</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> pid <span class="token punctuation">}</span> <span class="token operator">=</span> router<span class="token punctuation">.</span>query

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Post: </span><span class="token punctuation">{</span>pid<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> Post
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由映射" tabindex="-1"><a class="header-anchor" href="#路由映射" aria-hidden="true">#</a> 路由映射</h2><p>单页前端映射</p><p>通过 Link 标签 上的 as 属性 映射</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&#39;next/link&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;antd&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">ActiveLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/router/dynamic-parameters?id=666<span class="token punctuation">&quot;</span></span> <span class="token attr-name">as</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>huang<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token punctuation">&gt;</span></span><span class="token plain-text">
          动态映射 测试
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> ActiveLink
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过Router映射</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;/router/dynamic-parameters&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;12345&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> 
  <span class="token string">&#39;nihao&#39;</span> <span class="token comment">// 动态映射测试</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>提示: 上述路由映射方式 会导致在映射页面刷新导致404 错误;</p></blockquote><p>后端映射</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// server.js</span>
<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 匹配映射路由</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/huang/:id&#39;</span><span class="token punctuation">,</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> ctx<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id
  <span class="token keyword">await</span> <span class="token function">handle</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>req<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>res<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;/router/dynamic-parameters&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 映射目标页面</span>
    <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span>respond <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应路由页面需要配置 getInitialProps 保证后端映射 query 数据同步(不然会丢失)</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>DynamicParameters<span class="token punctuation">.</span><span class="token function-variable function">getInitialProps</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> id <span class="token operator">=</span> res<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id
  <span class="token keyword">return</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="路由变化的钩子-router-events" tabindex="-1"><a class="header-anchor" href="#路由变化的钩子-router-events" aria-hidden="true">#</a> 路由变化的钩子 router.events</h2><ul><li><p>routeChangeStart(url, { shallow })</p><ul><li>当路由开始改变时触发</li></ul></li><li><p>routeChangeComplete(url, { shallow })</p><ul><li>当路由完全改变时触发</li></ul></li><li><p>routeChangeError(err, url, { shallow })</p><ul><li>当更改路由时出现错误或路由加载被取消时触发</li></ul></li><li><p>beforeHistoryChange(url, { shallow })</p><ul><li>在更改浏览器历史记录之前触发</li></ul></li><li><p>hashChangeStart(url, { shallow })</p><ul><li>当哈希值改变而页面不变时触发</li></ul></li><li><p>hashChangeComplete(url, { shallow })</p><ul><li>当哈希已经改变，但页面没有改变时</li></ul></li></ul>`,19),w={href:"https://www.nextjs.cn/docs/api-reference/next/router#routerevents",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/TianYouH/react-nextjs/blob/master/pages/_app.js",target:"_blank",rel:"noopener noreferrer"},j={id:"getinitialprops",tabindex:"-1"},C=n("a",{class:"header-anchor",href:"#getinitialprops","aria-hidden":"true"},"#",-1),q={href:"https://www.nextjs.cn/docs/api-reference/data-fetching/getInitialProps",target:"_blank",rel:"noopener noreferrer"},R=n("p",null,"获取服务端预加载数据，同步当前页面刷新后query数据",-1),P=n("p",null,"推荐使用",-1),A=n("ul",null,[n("li",null,"getStaticProps"),n("li",null,[s("getServerSideProps "),n("ul",null,[n("li",null,"这些新的获取数据的方法使你可以在静态生成（static generation）和服务器端渲染（server-side rendering）之间进行精细控制。更多信息请参考 页面（Pages） 和 数据获取 文档")])])],-1),L=n("h2",{id:"自定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自定义","aria-hidden":"true"},"#"),s(" 自定义")],-1),I={id:"自定义app",tabindex:"-1"},N=n("a",{class:"header-anchor",href:"#自定义app","aria-hidden":"true"},"#",-1),S={href:"https://www.nextjs.cn/docs/advanced-features/custom-app",target:"_blank",rel:"noopener noreferrer"},H=e(`<ul><li>固定Layout</li><li>保持一些公用的状态</li><li>给页面传入一些自定义数据</li><li>自定义错误处理</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&#39;antd/dist/antd.css&#39;</span><span class="token punctuation">;</span> <span class="token comment">// or &#39;antd/dist/antd.less</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;next/router&#39;</span>


<span class="token keyword">function</span> <span class="token function">MyApp</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> Component<span class="token punctuation">,</span> pageProps <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">handleRouteChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> <span class="token punctuation">{</span> shallow <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
        <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">App is changing to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
          shallow <span class="token operator">?</span> <span class="token string">&#39;with&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;without&#39;</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> shallow routing</span><span class="token template-punctuation string">\`</span></span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeStart&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
    router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeComplete&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
    router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;beforeHistoryChange&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
    router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;hashChangeStart&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
    router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;hashChangeComplete&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>

    <span class="token comment">// If the component is unmounted, unsubscribe</span>
    <span class="token comment">// from the event with the \`off\` method:</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeStart&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
      router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;routeChangeComplete&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
      router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;beforeHistoryChange&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
      router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;hashChangeStart&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
      router<span class="token punctuation">.</span>events<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;hashChangeComplete&#39;</span><span class="token punctuation">,</span> handleRouteChange<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token operator">&lt;</span>Component <span class="token punctuation">{</span><span class="token operator">...</span>pageProps<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> MyApp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),B={id:"自定义document",tabindex:"-1"},E=n("a",{class:"header-anchor",href:"#自定义document","aria-hidden":"true"},"#",-1),M={href:"https://www.nextjs.cn/docs/advanced-features/custom-document",target:"_blank",rel:"noopener noreferrer"},T=n("ul",null,[n("li",null,"只有在服务端渲染的时候才会被调用"),n("li",null,"用来修改服务端渲染文档内容"),n("li",null,"一般用来配合第三方css-in-js方案")],-1),V=n("blockquote",null,[n("p",null,[s("不推荐在document中定义title "),n("code",null,"<title>我的 App</title>"),s(",可以通过在页面中 import Head from 'next/head' 方式定义;")])],-1),z={id:"ngxt-config-js",tabindex:"-1"},D=n("a",{class:"header-anchor",href:"#ngxt-config-js","aria-hidden":"true"},"#",-1),$={href:"https://www.nextjs.cn/docs/api-reference/next.config.js/introduction",target:"_blank",rel:"noopener noreferrer"},U=n("h2",{id:"nextjs-样式定义",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#nextjs-样式定义","aria-hidden":"true"},"#"),s(" nextjs 样式定义")],-1),Y={href:"https://www.npmjs.com/package/styled-jsx",target:"_blank",rel:"noopener noreferrer"},F=e(`<div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        App 页面信息
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">App p 11111</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sp glo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token plain-text">App span 22222</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* 正常局部测试 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">jsx</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">{\`
        div {
          color: red;
        }
        p {
          color: \${color};
        }
        .sp {
          color: yellow
        }
      \`}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
      </span><span class="token punctuation">{</span><span class="token comment">/* 全局特性测试,当该组件移除全局效果也会失效 */</span><span class="token punctuation">}</span><span class="token plain-text">
      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">jsx</span> <span class="token attr-name">global</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">{\`
        .glo {
          color: green
        }
      \`}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">
    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lazyloading" tabindex="-1"><a class="header-anchor" href="#lazyloading" aria-hidden="true">#</a> LazyLoading</h2><ul><li>异步加载模块</li><li>异步加载组件</li></ul><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">// 异步引入 moment 示例</span>
App<span class="token punctuation">.</span><span class="token function-variable function">getInitialProps</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> moment <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;moment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;黄长生&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">time</span><span class="token operator">:</span> moment<span class="token punctuation">.</span><span class="token function">default</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">1000</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fromNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> promise<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function G(J,K){const a=o("ExternalLinkIcon");return c(),l("div",null,[n("h1",u,[r,s(),n("a",k,[s("Nextjs 文档"),t(a)])]),d,n("h2",v,[m,s(),n("a",g,[s("页面跳转"),t(a)])]),b,n("h2",h,[f,s(),n("a",x,[s("动态路由"),t(a)])]),y,n("p",null,[n("a",w,[s("使用示例-1"),t(a)]),n("a",_,[s("使用示例-2"),t(a)])]),n("h2",j,[C,s(),n("a",q,[s("getInitialProps"),t(a)])]),R,P,A,L,n("h3",I,[N,s(),n("a",S,[s("自定义App"),t(a)])]),H,n("h3",B,[E,s(),n("a",M,[s("自定义document"),t(a)])]),T,V,n("h3",z,[D,s(),n("a",$,[s("ngxt.config.js"),t(a)])]),U,n("p",null,[s("默认支持 "),n("a",Y,[s("style-jsx"),t(a)])]),F])}const Q=p(i,[["render",G],["__file","Nextjs文档.html.vue"]]);export{Q as default};
