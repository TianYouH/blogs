import{_ as o,M as s,p as n,q as a,R as e,t,N as r,a1 as i}from"./framework-8fa3e4ce.js";const c={},h={id:"fiddler",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#fiddler","aria-hidden":"true"},"#",-1),_={href:"https://www.telerik.com/fiddler",target:"_blank",rel:"noopener noreferrer"},f=i('<p>Fiddler是一个http协议调试代理工具，它能够记录并检查所有你的电脑和互联网之间的http通讯，设置断点，查看所有的“进出”Fiddler的数据（指cookie,html,js,css等文件）。Fiddler 要比其他的网络调试器要更加简单，因为它不仅仅暴露http通讯还提供了一个用户友好的格式。</p><ul><li>代理原理：<br> 　Fiddler是位于客户端和服务器端的HTTP代理，也是目前最常用的http抓包工具之一 。 它能够记录客户端和服务器之间的所有 HTTP请求，可以针对特定的HTTP请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据。<br> 　既然是代理，也就是说：客户端的所有请求都要先经过Fiddler，然后转发到相应的服务器，反之，服务器端的所有响应，也都会先经过Fiddler然后发送到客户端。</li></ul><blockquote><p>使用Fiddler的话，需要先设置浏览器的代理地址，才可以抓取到浏览器的数据包。而很方便的是在你启动该工具后，它就已经自动帮你设置好了浏览器的代理了，当关闭后，它又将浏览器代理还原了。当然如果发现没有自动设置浏览器代理的话，那就得自己动手去浏览器进行设置代理操作了。（可自行百度每个浏览器是如何设置代理的），反正一定要设置相应的代理，否则fiddler是无法捕获到HTTP请求的。</p></blockquote><h3 id="https-监听配置" tabindex="-1"><a class="header-anchor" href="#https-监听配置" aria-hidden="true">#</a> https 监听配置</h3><p>fiddler默认只抓取http格式的</p><ol><li><p>打开Fiddler菜单项Tools -&gt; Options... -&gt;HTTPS；</p></li><li><p>勾选<em>CaptureHTTPS CONNECTs</em>, 点击<em>Actions</em>，<br> 勾选<em>Decrypt HTTPS traffic</em>和<em>Ignore servercertificate errors</em>两项,点击OK（首次点击会弹出是否信任fiddler证书和安全提示，直接点击yes就行）</p></li></ol>',6),u=["src"],m=e("h3",{id:"移动端-抓包配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#移动端-抓包配置","aria-hidden":"true"},"#"),t(" 移动端 抓包配置")],-1),b=e("ol",null,[e("li",null,[t("配置fiddler允许远程连接；"),e("br"),t(" 打开Fiddler菜单项Tools -> Options... ->Connections；"),e("br"),t(" 勾选"),e("em",null,"allow remote computers to connect"),t("，默认监听端口为8888，若端口被占用可以设置成其他的，配置好后要重新启动fiddler；")])],-1),g=["src"],T=e("ol",{start:"2"},[e("li",null,[t("对手机端进行参数配置；"),e("br"),t(" 首先要保证手机和电脑都处于同一个网络；"),e("br"),t(" 获取到电脑的ip地址；"),e("br"),t(" 打开手机浏览器，输入电脑ip及端口（例：192.168.0.112:8888）；")])],-1),F=["src"],k=e("p",null,"下载证书后进行安装，可前往设施搜索 证书 关键字，打开相关设置项，进行安装；",-1),x=["src"],w=e("p",null,"安装好证书后，前往手机无线网 设置 手动代理配置；",-1),v=["src"],B=i('<p>操作手机，电脑fiddler中会显示一些http信息，成功；</p><h3 id="汉化补丁" tabindex="-1"><a class="header-anchor" href="#汉化补丁" aria-hidden="true">#</a> 汉化补丁</h3><p>文件地址：【阿里云盘】文件/软件/开发工具/【代理】fiddler/fiddler汉化.zip</p><ol><li>下载文件后解压，包含 FiddlerTexts.txt 和 FdToChinese.dll 文件;</li><li>将 FiddlerTexts.txt 复制到 fiddler 根目录下;</li><li>将 FdToChinese.dll 复制到 fiddler 根目录下的 Scripts 目录;</li><li>运行 fiddler 汉化完成;</li></ol><blockquote><p>打开FiddlerTexts.txt文件，可以看到以&amp;格式命名的，就是汉化前的选择项。有兴趣的小伙伴可以尝试一下其他未汉化的部分。</p></blockquote>',5),C=e("br",null,null,-1),H={href:"https://zhuanlan.zhihu.com/p/465463269",target:"_blank",rel:"noopener noreferrer"};function N(l,P){const d=s("ExternalLinkIcon");return n(),a("div",null,[e("h1",h,[p,t(),e("a",_,[t("fiddler"),r(d)])]),f,e("img",{src:l.$withBase("/image/dev/debug/fiddler1.png"),alt:"示例"},null,8,u),m,b,e("img",{src:l.$withBase("/image/dev/debug/fiddler2.png"),alt:"示例"},null,8,g),T,e("img",{src:l.$withBase("/image/dev/debug/fiddler3.png"),alt:"示例"},null,8,F),k,e("img",{src:l.$withBase("/image/dev/debug/fiddler4.png"),alt:"示例"},null,8,x),w,e("img",{src:l.$withBase("/image/dev/debug/fiddler5.png"),alt:"示例"},null,8,v),B,e("blockquote",null,[e("p",null,[t("ref:"),C,e("a",H,[t("fiddler汉化"),r(d)])])])])}const S=o(c,[["render",N],["__file","fiddler.html.vue"]]);export{S as default};
