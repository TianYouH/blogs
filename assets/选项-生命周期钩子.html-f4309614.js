import{_ as e,M as o,p,q as c,R as n,t,N as d,a1 as i}from"./framework-8fa3e4ce.js";const u={},l=n("h1",{id:"选项-生命周期钩子",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#选项-生命周期钩子","aria-hidden":"true"},"#"),t(" 选项-生命周期钩子")],-1),r=["src"],k=i(`<h2 id="版本对比" tabindex="-1"><a class="header-anchor" href="#版本对比" aria-hidden="true">#</a> 版本对比</h2><table><thead><tr><th>vue 1.0+</th><th>vue 2.0+</th><th>vue 3.0+ 选项式API -&gt; 组合式API</th><th>描述</th></tr></thead><tbody><tr><td>init</td><td>beforeCreate</td><td>beforeCreate -&gt; setup()</td><td>组件实例刚被创建，组件属性计算之前，如 data 属性等</td></tr><tr><td>created</td><td>created</td><td>created -&gt; setup()</td><td>组件实例创建完成，属性已绑定，但 DOM 还未生成，$el 属性还不存在</td></tr><tr><td>beforeCompile</td><td>beforeMount</td><td>beforeMount -&gt; onBeforeMount</td><td>在挂载开始之前被调用：相关的 render 函数首次被调用</td></tr><tr><td>compiled</td><td>-</td><td>-</td><td>模板编译/挂载之后（但是不担保 $el 已插入文档）</td></tr><tr><td>ready</td><td>mounted</td><td>mounted -&gt; onMounted</td><td>模板编译/挂载之后</td></tr><tr><td>-</td><td>beforeUpdate</td><td>beforeUpdate -&gt; onBeforeUpdate</td><td>组件更新之前</td></tr><tr><td>-</td><td>updated</td><td>updated -&gt; onUpdated</td><td>组件更新之后</td></tr><tr><td>-</td><td>activated</td><td>activated -&gt; onActivated</td><td>被 keep-alive 缓存的组件激活时调用</td></tr><tr><td>-</td><td>deactivated</td><td>deactivated -&gt; onDeactivated</td><td>被 keep-alive 缓存的组件失活时调用</td></tr><tr><td>attached</td><td>-</td><td></td><td>在 vm.$el 插入 DOM 时调用。</td></tr><tr><td>detached</td><td>-</td><td></td><td>在 vm.$el 从 DOM 中删除时调用。</td></tr><tr><td>beforeDestroy</td><td>beforeDestroy</td><td>beforeUnmount -&gt; onBeforeUnmount</td><td>实例销毁之前调用。在这一步，实例仍然完全可用</td></tr><tr><td>destroyed</td><td>destroyed</td><td>unmounted -&gt; onUnmounted</td><td>实例销毁后调用</td></tr></tbody></table><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token comment">// 装载阶段</span>
  <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;beforeCreate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;created&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;beforeMount&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;mounted&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 更新阶段</span>
  <span class="token function">beforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;beforeUpdate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">updated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;updated&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 销毁阶段</span>
  <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;beforeDestroy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;destroyed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="父子组件生命周期调用顺序" tabindex="-1"><a class="header-anchor" href="#父子组件生命周期调用顺序" aria-hidden="true">#</a> 父子组件生命周期调用顺序</h2><p>创建由外到内</p><p>渲染由内到外</p><ol><li>先创建父组件js模型</li><li>在创建子组件js模型</li><li>在渲染子组件</li><li>在渲染父组件</li></ol><p>父（created）-&gt; 子（created）-&gt; 子（mounted）-&gt; 父（mounted）-&gt;</p><p>更新由外到内</p><p>更新结束由内到外</p><ol><li>先更新父组件（触发父组件事件，改变父组件数据）</li><li>在更新子组件（子组件有引用你父组件被改变数据）</li><li>先更新完子组件</li><li>在更新完父组件</li></ol><p>父（beforeUpdate）-&gt; 子（beforeUpdate）-&gt; 子（updated）-&gt; 父（updated）-&gt;</p><p>开始销毁由外到内（由父组件触发） 销毁完成由内到外（由父组件触发）</p><ol><li>先准备销毁父组件</li><li>在准备销毁子组件</li><li>子组件销毁结束</li><li>父组件销毁结束</li></ol><p>父（beforeDestroy）-&gt; 子（beforeDestroy）-&gt; 子（destroyed）-&gt; 父（destroyed）</p>`,15),v=n("br",null,null,-1),b={href:"https://www.cnblogs.com/zdz8207/p/vue-lifecycle.html",target:"_blank",rel:"noopener noreferrer"};function m(s,f){const a=o("ExternalLinkIcon");return p(),c("div",null,[l,n("img",{src:s.$withBase("/image/web/vue/选项-生命周期钩子1.png"),alt:"图片"},null,8,r),k,n("blockquote",null,[n("p",null,[t("ref："),v,n("a",b,[t("vue生命周期图示中英文版Vue实例生命周期钩子"),d(a)])])])])}const h=e(u,[["render",m],["__file","选项-生命周期钩子.html.vue"]]);export{h as default};
