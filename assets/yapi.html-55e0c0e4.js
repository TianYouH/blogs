import{_ as t,p as d,q as i,a1 as a}from"./framework-8fa3e4ce.js";const l={},e=a('<h1 id="yapi" tabindex="-1"><a class="header-anchor" href="#yapi" aria-hidden="true">#</a> YApi</h1><p>YAPI是一个开源的API管理平台，用于帮助团队管理和维护API。它提供了文档编写、接口测试、版本控制和部署等功能，并且支持各种类型的API，包括RESTful API和WebSocket API等。</p><p>使用YAPI可以大大提高团队的工作效率，方便开发者和用户查看和测试API接口。</p><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性" aria-hidden="true">#</a> 特性</h3><ul><li>基于 Json5 和 Mockjs 定义接口返回数据的结构和文档，效率提升多倍</li><li>扁平化权限设计，即保证了大型企业级项目的管理，又保证了易用性</li><li>类似 postman 的接口调试</li><li>自动化测试, 支持对 Response 断言</li><li>MockServer 除支持普通的随机 mock 外，还增加了 Mock 期望功能，根据设置的请求过滤规则，返回期望数据</li><li>支持 postman, har, swagger, json 数据导入</li><li>免费开源，内网部署，信息再也不怕泄露了</li></ul><h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="权限" tabindex="-1"><a class="header-anchor" href="#权限" aria-hidden="true">#</a> 权限</h3><ul><li>超级管理员：拥有最高的权限，并将权限分配给若干 组长，超级管理员 只需管理组长 即可；</li><li>组长：实际上管理YAPI各大分组与项目的是“组长”。组长对分组或项目负责； <ul><li>分组组长：权限包括修改分组、删除分组、创建分组下的项目。一般来说，分组组长 只需要对项目负责，将项目的操作任务安排给 项目组长 处理即可。</li><li>项目组长：只属于某一个项目因此它无法操作项目所属分组，但拥有项目的全部权限，项目组长 是 YApi 的基层管理者，承担了 YApi 绝大部分的日常管理工作。</li></ul></li><li>项目开发者：指定项目中的开发人员，对项目接口进行增删改查。</li><li>游客：新用户未加入项目或分组时，我们称为 “访客”。</li></ul><p>项目权限</p><table><thead><tr><th>操作</th><th>游客</th><th>项目开发者</th><th>项目组长</th><th>超级管理员</th></tr></thead><tbody><tr><td>浏览公开项目与接口</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>浏览私有项目与接口</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>编辑项目信息</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>新建接口</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>编辑接口</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>编辑项目头像</td><td>-</td><td>-</td><td>✓</td><td>✓</td></tr><tr><td>删除项目</td><td>-</td><td>-</td><td>✓</td><td>✓</td></tr></tbody></table><p>分组权限</p><table><thead><tr><th>操作</th><th>游客</th><th>项目开发者</th><th>项目组长</th><th>超级管理员</th></tr></thead><tbody><tr><td>浏览分组</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>在分组中新建项目</td><td>-</td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>编辑分组信息</td><td>-</td><td>-</td><td>✓</td><td>✓</td></tr><tr><td>管理分组成员</td><td>-</td><td>-</td><td>✓</td><td>✓</td></tr><tr><td>删除分组</td><td>-</td><td>-</td><td>✓</td><td>✓</td></tr></tbody></table><h3 id="创建分组" tabindex="-1"><a class="header-anchor" href="#创建分组" aria-hidden="true">#</a> 创建分组</h3><p>每个人都有一个默认私有分组“个人空间”</p><p>只有 超级管理员 有权限创建分组</p><p>新建分组中分别包含以下选项</p><ul><li>项目列表：组内相关的项目维护；</li><li>成员列表：组内成员维护管理；</li><li>分组动态：记录对分组的相关操作日志；</li><li>分组设置：分组基本设置；</li></ul><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目" aria-hidden="true">#</a> 创建项目</h3><ol><li>进入管理员账号并使用添加项目功能</li><li>添加项目并设置访问权限和所属分类</li></ol><h3 id="添加接口" tabindex="-1"><a class="header-anchor" href="#添加接口" aria-hidden="true">#</a> 添加接口</h3><ol><li>进入项目并使用添加接口功能</li><li>输入接口信息，包括接口名称、请求方式、请求参数、返回参数等</li><li>保存接口</li></ol><h3 id="编辑接口" tabindex="-1"><a class="header-anchor" href="#编辑接口" aria-hidden="true">#</a> 编辑接口</h3><ol><li>进入项目并打开需要编辑的接口</li><li>修改接口信息</li><li>保存接口</li></ol><h3 id="接口测试" tabindex="-1"><a class="header-anchor" href="#接口测试" aria-hidden="true">#</a> 接口测试</h3><ol><li>进入项目并打开需要测试的接口</li><li>在页面中输入请求参数，点击发送请求</li><li>在页面中查看响应结果</li></ol><h3 id="发布接口" tabindex="-1"><a class="header-anchor" href="#发布接口" aria-hidden="true">#</a> 发布接口</h3><ol><li>进入项目并打开需要发布的接口</li><li>将接口状态更改为发布状态</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>使用YAPI可以使API管理变得更加简单和高效。它提供了文档编写、接口测试、版本控制和部署等功能，并支持各种类型的API。如果您的团队需要一个API管理平台，不妨考虑使用YAPI。</p>',29),r=[e];function h(n,o){return d(),i("div",null,r)}const c=t(l,[["render",h],["__file","yapi.html.vue"]]);export{c as default};
