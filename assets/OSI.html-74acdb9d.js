import{_ as d,M as r,p as n,q as a,R as t,t as i,N as s,a1 as o}from"./framework-8fa3e4ce.js";const c={},u=o('<h1 id="osi" tabindex="-1"><a class="header-anchor" href="#osi" aria-hidden="true">#</a> OSI</h1><p>7层模型和TCP/IP 4层模型</p><p>OSI：open system interconnection 开放式系统互联参考模型</p><h2 id="osi模型各层的基本作用" tabindex="-1"><a class="header-anchor" href="#osi模型各层的基本作用" aria-hidden="true">#</a> OSI模型各层的基本作用</h2><table><thead><tr><th style="text-align:center;">序</th><th style="text-align:center;">层</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">7</td><td style="text-align:center;">应用层</td><td style="text-align:left;">为应用程序提供网络服务</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">表示层</td><td style="text-align:left;">数据格式化、加密、解密</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">会话层</td><td style="text-align:left;">建立、维护、管理会话连接</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">传输层</td><td style="text-align:left;">建立、维护、管理端到端连接</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">网络层</td><td style="text-align:left;">IP寻址和路由选择</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">数据链路层</td><td style="text-align:left;">控制网络层与物理层之间通信</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">物理层</td><td style="text-align:left;">比特流传输</td></tr></tbody></table><h2 id="osi-和-tcp-ip-的对应关系和协议" tabindex="-1"><a class="header-anchor" href="#osi-和-tcp-ip-的对应关系和协议" aria-hidden="true">#</a> OSI 和 TCP/IP 的对应关系和协议</h2><table><thead><tr><th>OSI七层网络模型</th><th>TCP/IP四层概念模型</th><th>对应网络协议</th></tr></thead><tbody><tr><td>应用层（Application）</td><td>应用层</td><td>HTTP、TFTP、FTP、NFS、WAIS、SMTP</td></tr><tr><td>表示层（Presentation）</td><td>应用层</td><td>Telnet、Rlogin、SNMP、Gopher</td></tr><tr><td>会话层（Session）</td><td>应用层</td><td>SMTP、DNS</td></tr><tr><td>传输层（Transport）</td><td>传输层</td><td>TCP、UDP</td></tr><tr><td>网络层（Network）</td><td>网络层</td><td>IP、ICMP、ARP、RARP、AKP、UUCP</td></tr><tr><td>数据链路层（Data Link）</td><td>数据链路层</td><td>FDDI、Ethernet、Arpanet、PDN、SLIP、PPP</td></tr><tr><td>物理层（Physical）</td><td>数据链路层</td><td>IEEE 802.1A、IEEE 802.2到IEEE 802.11</td></tr></tbody></table><h2 id="osi模型的详解" tabindex="-1"><a class="header-anchor" href="#osi模型的详解" aria-hidden="true">#</a> OSI模型的详解</h2><ul><li>1 物理层 <ul><li>1.1 通过光缆、电缆、无线电波等方式将设备连接起来组网</li><li>1.2 两个不同局域网（移动、电信）通信，需要ISP互联网服务供应商的物理连接</li><li>1.3 作用：传送比特流 0和1</li></ul></li><li>2 数据链路层 <ul><li>2.1 作用：根据以太网协议将一组电信号组成一个数据包，称作“帧”，并控制他的传输 <ul><li>有两部分： <ul><li>1 标头head：标明数据发送者、接收者、数据类型</li><li>2 数据data</li></ul></li></ul></li><li>2.2 MAC地址 <ul><li>2.2.1 作用：定位数据包的路径，如发送者、接收者</li><li>2.2.2 既网卡地址，每个网卡都是独一无二的12个16进制数</li><li>2.2.3 前6个表厂商，后6个表流水号</li></ul></li><li>2.3 广播方式 <ul><li>2.3.1 发送者把数据包，发送给局域网内的所有pc,当每个pc根据MAC地址自动匹配</li><li>2.3.2 发送媒介：分组交换机/网络交换机</li></ul></li><li>2.4 网络交换机network switch <ul><li>2.4.1 扩展网络的机器</li><li>2.4.2 作用：为子网提供更多的接口，以连接更多的pc</li></ul></li></ul></li><li>3 网络层 <ul><li>3.1 作用：建立 主机-主机的连接</li><li>3.2 引入新的地址模式-IP地址/网络地址，可以区分哪些PC是在同一子网（局域网）内</li><li>3.3 IP类型分类 <ul><li>3.3.1 IPv4 32个二进制，4字节*8位 <ul><li>前24位表网格同一子网下，必须相同</li><li>后8位表主机</li></ul></li><li>3.3.2 IPv6 128个二进制，8字节*16位</li></ul></li><li>3.4 子网掩码subnet mask：通过and运算判断是否在同一子网下 ip and 255.255.255.0</li><li>3.5 路由 routing <ul><li>3.5.1 作用： <ul><li>通过网络把数据从原地址到目标地址</li><li>引导分组传送，经过一些中间节点后，到达目的地</li></ul></li><li>3.5.2 实现方法：定义一条路径，经过因特网把包发送到目的地，但不指定完全路径，只定义两个网关之间的路径段</li><li>3.5.3 路由器router：连接两个或多个网络并实现路由功能的机器；可看作配有多个网卡的专用电脑，让网卡接入不同的网络中</li><li>3.5.4 网关 gateway: 网络层使用的路由器，通常指路由器的ip</li><li>3.5.5 ex: A:发送地址 B:接收地址 <ul><li>1 若在同一局域网：通过广播方式即可找到</li><li>2 若在不同局域网： <ul><li>A先生将包根据网关添加路由器/主机地址，通过交换机的广播方式发给主机</li><li>A的主机将数据包传送给B所在的主机，再由主机根据MAC广播给B 完成</li><li>注：IP包不断被路由封装和拆开（添加/删除地址）</li></ul></li></ul></li></ul></li><li>3.6 ARP协议 <ul><li>3.6.1 作用：局域网内IP和MAC地址的对应关系</li><li>3.6.2 作用位置：介于数据链路层和网络层之间</li><li>3.6.3 局限：仅限ipv4,ipv6用Neighbor Discovery Protocol替代</li></ul></li></ul></li><li>4 传输层 <ul><li>4.1 作用：建立 端口-端口间的连接</li><li>4.2 端口号port</li><li>4.3 socket <ul><li>4.3.1 进程间通信：需要双方IP,端口号，通信采用的协议栈</li><li>4.3.2 格式：无符号整型变量，用来表示一个通信进程</li><li>4.3.3 本质：是编程接口API，对TCP/IP协议的封装</li></ul></li><li>4.4 UDP/TCP <ul><li>4.4.1 作用：在数据包标头加上端口号</li><li>4.4.2 TCP：复杂，稳定，有包遗失，会重发</li><li>4.4.3 UDP：简单，但不稳定，不能确定对方是否成功接收</li></ul></li></ul></li><li>5 会话层</li><li>6 表示层</li><li>7 应用层 （对会话层、表示层、应用层合并为TCP/IP的应用层） <ul><li>7.1 作用 <ul><li>7.1.1 规定应用程序的数据格式</li><li>7.1.2 如ftp,网页、smtp的数据格式</li></ul></li><li>7.2 是对OSI模型中最高3层的合并，直接面向用户</li></ul></li></ul><p>数据链路层数据包（以太网数据包）格式，除了应用层没有头部，其他都有</p>',10),h=["src"],P=t("p",null,"由于以太网数据包的数据部分，最大长度为1500字节，当IP包过大时，会分割下来，但是每个分割包的头部都一样",-1),p=["src"],I=t("p",null,"数据包在传送时的封装和解封装如下所示",-1),g=["src"],x=t("br",null,null,-1),y={href:"https://zhuanlan.zhihu.com/p/32059190",target:"_blank",rel:"noopener noreferrer"};function _(l,f){const e=r("ExternalLinkIcon");return n(),a("div",null,[u,t("img",{src:l.$withBase("/image/dev/network/OSI1.jpg"),alt:"示例"},null,8,h),P,t("img",{src:l.$withBase("/image/dev/network/OSI2.jpg"),alt:"示例"},null,8,p),I,t("img",{src:l.$withBase("/image/dev/network/OSI3.jpg"),alt:"示例"},null,8,g),t("blockquote",null,[t("p",null,[i("ref："),x,t("a",y,[i("OSI 7层模型和TCP/IP 4层模型"),s(e)])])])])}const T=d(c,[["render",_],["__file","OSI.html.vue"]]);export{T as default};
