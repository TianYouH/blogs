import{_ as s,M as n,p as a,q as i,R as e,t,N as r}from"./framework-8fa3e4ce.js";const c={},d=e("h1",{id:"gitlabflow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gitlabflow","aria-hidden":"true"},"#"),t(" GitlabFlow")],-1),h=e("p",null,"Gitlab flow 是 Git flow 与 Github flow 的综合。它吸取了两者的优点，既有适应不同开发环境的弹性，又有单一主分支的简单和便利。它是 Gitlab.com 推荐的做法。",-1),_=e("h2",{id:"上游优先",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上游优先","aria-hidden":"true"},"#"),t(" 上游优先")],-1),u=e("p",null,'Gitlab flow 的最大原则叫做"上游优先"（upsteam first），即只存在一个主分支master，它是所有其他分支的"上游"。只有上游分支采纳的代码变化，才能应用到其他分支。',-1),m={href:"https://www.chromium.org/chromium-os/chromiumos-design-docs/upstream-first/",target:"_blank",rel:"noopener noreferrer"},p=e("ol",null,[e("li",null,"Linus Torvalds的分支"),e("li",null,"子系统（比如netdev）的分支"),e("li",null,"设备厂商（比如三星）的分支")],-1),f=e("h2",{id:"持续发布",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#持续发布","aria-hidden":"true"},"#"),t(" 持续发布")],-1),b=e("p",null,"Gitlab flow 分成两种情况，适应不同的开发流程。",-1),g=["src"],w=e("p",null,'对于"持续发布"的项目，它建议在master分支以外，再建立不同的环境分支。比如，"开发环境"的分支是master，"预发环境"的分支是pre-production，"生产环境"的分支是production。',-1),G=e("p",null,'开发分支是预发分支的"上游"，预发分支又是生产分支的"上游"。代码的变化，必须由"上游"向"下游"发展。比如，生产环境出现了bug，这时就要新建一个功能分支，先把它合并到master，确认没有问题，再cherry-pick到pre-production，这一步也没有问题，才进入production。',-1),x=e("p",null,"只有紧急情况，才允许跳过上游，直接合并到下游分支。",-1),v=e("h2",{id:"版本发布",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#版本发布","aria-hidden":"true"},"#"),t(" 版本发布")],-1),k=["src"],B=e("p",null,'对于"版本发布"的项目，建议的做法是每一个稳定版本，都要从master分支拉出一个分支，比如2-3-stable、2-4-stable等等。',-1),F=e("p",null,"以后，只有修补bug，才允许将代码合并到这些分支，并且此时要更新小版本号。",-1);function N(o,C){const l=n("ExternalLinkIcon");return a(),i("div",null,[d,h,_,u,e("p",null,[e("a",m,[t("Chromium"),r(l)]),t("(Chrome的工程版或称实验版)项目就是一个例子，它明确规定，上游分支依次为：")]),p,f,b,e("img",{src:o.$withBase("/image/dev/git/gitlabFlow.png"),alt:"示例"},null,8,g),w,G,x,v,e("img",{src:o.$withBase("/image/dev/git/gitlabFlow2.png"),alt:"示例"},null,8,k),B,F])}const L=s(c,[["render",N],["__file","GitlabFlow.html.vue"]]);export{L as default};
