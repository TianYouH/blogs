import{_ as s,p as a,q as n,a1 as e}from"./framework-8fa3e4ce.js";const l={},t=e(`<h1 id="判断和循环" tabindex="-1"><a class="header-anchor" href="#判断和循环" aria-hidden="true">#</a> 判断和循环</h1><h2 id="条件测试" tabindex="-1"><a class="header-anchor" href="#条件测试" aria-hidden="true">#</a> 条件测试</h2><ul><li>为命令的执行提供最直接的识别依据 <ul><li>文件或目录的读/写等状态</li><li>数值的大小</li><li>字符串是否匹配</li><li>多条件组合</li></ul></li></ul><h3 id="test测试操作" tabindex="-1"><a class="header-anchor" href="#test测试操作" aria-hidden="true">#</a> test测试操作</h3><ul><li>语法格式 <ul><li><code>test 选项 参数</code></li><li>[ 选项 参数 ]</li></ul></li></ul><blockquote><p><code>help test</code> 查阅帮助</p></blockquote><h4 id="字符串比较" tabindex="-1"><a class="header-anchor" href="#字符串比较" aria-hidden="true">#</a> 字符串比较</h4><ul><li>基本语法 <ul><li>是否为空<code>[ -z 字符串 ]</code></li><li>等于<code>[ 字符串1 == 字符串2 ]</code></li><li>不等于<code>[ 字符串1 !== 字符串2 ]</code></li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$a</span> <span class="token punctuation">]</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$?</span> <span class="token comment"># 0</span>
<span class="token assign-left variable">a</span><span class="token operator">=</span><span class="token number">123</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token variable">$a</span> <span class="token punctuation">]</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$?</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="整数值比较" tabindex="-1"><a class="header-anchor" href="#整数值比较" aria-hidden="true">#</a> 整数值比较</h4><ul><li><code>[ 整数值1 操作符 整数值2 ]</code></li></ul><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">-eq</td><td style="text-align:center;">等于（Equal）</td></tr><tr><td style="text-align:center;">-ne</td><td style="text-align:center;">不等于（Not Equal）</td></tr><tr><td style="text-align:center;">-ge</td><td style="text-align:center;">大于或等于（Greater or Equal）</td></tr><tr><td style="text-align:center;">-le</td><td style="text-align:center;">小于或等于（Less or Equal）</td></tr><tr><td style="text-align:center;">-gt</td><td style="text-align:center;">大于（Greater Equal）</td></tr><tr><td style="text-align:center;">-lt</td><td style="text-align:center;">小于（Less Equal）</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span> <span class="token number">3</span> <span class="token parameter variable">-eq</span> <span class="token number">3</span> <span class="token punctuation">]</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$?</span> <span class="token comment"># 0</span>
<span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span> <span class="token comment"># 10 返回文件个数</span>
<span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span> <span class="token parameter variable">-le</span> <span class="token number">5</span> <span class="token punctuation">]</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$?</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="文件状态测试" tabindex="-1"><a class="header-anchor" href="#文件状态测试" aria-hidden="true">#</a> 文件状态测试</h4><ul><li><code>[ 操作符 文件或目录 ]</code></li></ul><table><thead><tr><th style="text-align:center;">操作符</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">-e</td><td style="text-align:center;">判断对象是否存在（Exist）,若存在则结果为真</td></tr><tr><td style="text-align:center;">-d</td><td style="text-align:center;">判断对象是否为目录（Directory）,是则为真</td></tr><tr><td style="text-align:center;">-f</td><td style="text-align:center;">判断对象是否为一般文件（File）,是则为真</td></tr><tr><td style="text-align:center;">-r</td><td style="text-align:center;">判断对象是有可读（Read）权限,是则为真</td></tr><tr><td style="text-align:center;">-w</td><td style="text-align:center;">判断对象是有可写（Write）权限,是则为真</td></tr><tr><td style="text-align:center;">-x</td><td style="text-align:center;">对象是否有可执行（eXcute）权限,是则为真</td></tr></tbody></table><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span> <span class="token parameter variable">-e</span> /etc <span class="token punctuation">]</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$?</span> <span class="token comment"># 0</span>
<span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /etc <span class="token punctuation">]</span>
<span class="token builtin class-name">echo</span> <span class="token variable">$?</span> <span class="token comment"># 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="组合多个命令" tabindex="-1"><a class="header-anchor" href="#组合多个命令" aria-hidden="true">#</a> 组合多个命令</h3><ul><li>使用控制符组合多个命令 <ul><li><code>;</code> 分割执行命令</li><li><code>&amp;&amp;</code> 并且，在前置命令执行成功后才能之后后置命令</li><li><code>||</code> 或者，优先执行前置命令，前置命令执行失败后执行后置命令</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> usr/ <span class="token punctuation">;</span> <span class="token function">ls</span>
<span class="token comment"># bin/  etc/  lib/  libexec/  share/  ssl/</span>
<span class="token builtin class-name">cd</span> usr/ <span class="token operator">&amp;&amp;</span> <span class="token function">ls</span>
<span class="token comment"># bin/  etc/  lib/  libexec/  share/  ssl/</span>
<span class="token builtin class-name">cd</span> usr错误目录/ <span class="token operator">||</span> <span class="token builtin class-name">echo</span> message
<span class="token comment"># message</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="多条件判断" tabindex="-1"><a class="header-anchor" href="#多条件判断" aria-hidden="true">#</a> 多条件判断</h3><ul><li>使用&amp;&amp;、||进行多个条件的判断 <ul><li><code>[ 判断1 ] &amp;&amp; [ 判断2 ]</code></li><li><code>[ 判断1 ] || [ 判断2 ]</code></li><li><code>[[ 判断1 &amp;&amp; 判断2 || 判断3 ]]</code></li></ul></li></ul><h2 id="if-语句" tabindex="-1"><a class="header-anchor" href="#if-语句" aria-hidden="true">#</a> if 语句</h2><h3 id="if-单分支语法" tabindex="-1"><a class="header-anchor" href="#if-单分支语法" aria-hidden="true">#</a> if 单分支语法</h3><ul><li>当“条件成立”时执行命令序列</li><li>否则，不执行任何操作</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> 条件测试
   <span class="token keyword">then</span> 命令序列
<span class="token keyword">fi</span>

<span class="token keyword">if</span> 条件测试<span class="token punctuation">;</span><span class="token keyword">then</span>
   命令序列
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>下方有示例</p></blockquote><h3 id="if-双分支判断" tabindex="-1"><a class="header-anchor" href="#if-双分支判断" aria-hidden="true">#</a> if 双分支判断</h3><ul><li>当“条件成立”时执行命令序列1</li><li>否则，执行命令序列2</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> 条件测试
<span class="token keyword">then</span>
  命令序列1
<span class="token keyword">else</span> 
  命令序列2
<span class="token keyword">fi</span>

<span class="token keyword">if</span> 条件测试<span class="token punctuation">;</span><span class="token keyword">then</span>
   命令序列1
<span class="token keyword">else</span>
   命令序列2
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>下方有示例</p></blockquote><h3 id="if-多分支判断" tabindex="-1"><a class="header-anchor" href="#if-多分支判断" aria-hidden="true">#</a> if 多分支判断</h3><ul><li>相当于if语句嵌套</li><li>针对多个条件分别执行不同的操作</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">if</span> 条件测试1<span class="token punctuation">;</span><span class="token keyword">then</span>
   命令序列1
<span class="token keyword">elif</span> 条件测试2<span class="token punctuation">;</span><span class="token keyword">then</span>
   命令序列2
<span class="token punctuation">..</span>. <span class="token punctuation">..</span>.
<span class="token keyword">else</span>
   命令序列n
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>下方有示例</p></blockquote><h2 id="for-循环" tabindex="-1"><a class="header-anchor" href="#for-循环" aria-hidden="true">#</a> for 循环</h2><ul><li>根据变量的不同取值，重复执行命令序列</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 值列表
<span class="token keyword">do</span>
    命令序列
<span class="token keyword">done</span>

<span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>初值<span class="token punctuation">;</span>条件<span class="token punctuation">;</span>步长<span class="token punctuation">;</span><span class="token punctuation">))</span></span>
<span class="token keyword">do</span>
    命令序列
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token number">1</span> <span class="token number">8</span> ab <span class="token number">99</span> qq
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">&quot; I am <span class="token variable">$i</span>&quot;</span>
<span class="token keyword">done</span>
<span class="token comment"># I am 1 I am 8 I am ab I am 99 I am qq</span>

<span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span>
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">&quot; I am <span class="token variable">$i</span>&quot;</span>
<span class="token keyword">done</span>
<span class="token comment"># I am 1 I am 2 I am 3 I am 4 I am 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>下方有示例</p></blockquote><h2 id="while-循环" tabindex="-1"><a class="header-anchor" href="#while-循环" aria-hidden="true">#</a> while 循环</h2><ul><li>反复测试条件，只要成立就执行命令序列</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token keyword">while</span> 条件测试
<span class="token keyword">do</span>
  命令序列
<span class="token keyword">done</span>

<span class="token keyword">while</span> 未猜中正确价格
<span class="token keyword">do</span>
  反复猜商品价格
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 正常循环</span>
<span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$i</span> <span class="token parameter variable">-le</span> <span class="token number">5</span> <span class="token punctuation">]</span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$i</span>
  <span class="token builtin class-name">let</span> i++ <span class="token comment"># 递增控制，避免死循环</span>
<span class="token keyword">done</span>

<span class="token comment"># 无限循环 “:” </span>
<span class="token keyword">while</span> <span class="token builtin class-name">:</span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">echo</span> hello world
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>下方有示例</p></blockquote><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><h3 id="监控脚本" tabindex="-1"><a class="header-anchor" href="#监控脚本" aria-hidden="true">#</a> 监控脚本</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 获取系统各项性能参数指数，并与预设阈值进行比较</span>

<span class="token assign-left variable">local_time</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&quot;%Y%m%d %H:%M:%S&quot;</span><span class="token variable">)</span></span> <span class="token comment"># 获取时间</span>
<span class="token assign-left variable">local_ip</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ifconfig</span> ens33 <span class="token operator">|</span> <span class="token function">grep</span> netmask <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&quot; &quot;</span> <span class="token parameter variable">-f3</span><span class="token variable">)</span></span> <span class="token comment"># 获取ens33网卡IP</span>
<span class="token assign-left variable">free_mem</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/meminfo <span class="token operator">|</span> <span class="token function">grep</span> Avai <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&quot; &quot;</span> <span class="token parameter variable">-f2</span><span class="token variable">)</span></span> <span class="token comment"># 获取剩余内存大小</span>
<span class="token assign-left variable">free_disk</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;\\$&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token parameter variable">-s</span> <span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&quot; &quot;</span> <span class="token parameter variable">-f4</span><span class="token variable">)</span></span> <span class="token comment"># 获取剩余磁盘大小</span>
<span class="token assign-left variable">cpu_load</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/loadavg <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&quot; &quot;</span> <span class="token parameter variable">-f3</span><span class="token variable">)</span></span> <span class="token comment"># 获取工作负载</span>
<span class="token assign-left variable">login_user</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">who</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span> <span class="token comment"># 获取登录系统用户</span>
<span class="token assign-left variable">procs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span> <span class="token comment"># 获取当前进程数</span>

<span class="token comment"># 当剩余内存不足1GB时发送邮件给root进行报警</span>
<span class="token punctuation">[</span> <span class="token variable">$free_mem</span> <span class="token parameter variable">-lt</span> <span class="token number">1048576</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$local_time</span> 可用内存不足，可用内存：<span class="token variable">$free_mem</span> 在 <span class="token variable">$local_ip</span> 机器&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> 警告 root@localhost

<span class="token comment"># 当剩余磁盘不足10GB时发送邮件给root进行报警</span>
<span class="token punctuation">[</span> <span class="token variable">$free_disk</span> <span class="token parameter variable">-lt</span> <span class="token number">10485760</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$local_time</span> 可用磁盘不足，可用内存：<span class="token variable">$free_disk</span> 在 <span class="token variable">$local_ip</span> 机器&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> 警告 root@localhost

<span class="token comment"># 当剩CPU 15min 平均负载超过4时发送邮件给root进行报警，因为包含小数所以使用bc</span>
<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$cpu_load</span> &gt; 4&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span><span class="token variable">)</span></span>
<span class="token punctuation">[</span> <span class="token variable">$result</span> <span class="token parameter variable">-eq</span> <span class="token number">1</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$local_time</span> CPU负载过高，CPU负载：<span class="token variable">$cpu_load</span> 在 <span class="token variable">$local_ip</span> 机器&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> 警告 root@localhost

<span class="token comment"># 当剩实时在线人数大于3人时发送邮件给root进行报警</span>
<span class="token punctuation">[</span> <span class="token variable">$login_user</span> <span class="token parameter variable">-gt</span> <span class="token number">3</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$local_time</span> 登录用户过多，<span class="token variable">$login_user</span> 登录在 <span class="token variable">$local_ip</span> 机器&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> 警告 root@localhost

<span class="token comment"># 当剩实时进程数大于50时发送邮件给root进行报警</span>
<span class="token punctuation">[</span> <span class="token variable">$procs</span> <span class="token parameter variable">-gt</span> <span class="token number">50</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$local_time</span> 进行执行过多，<span class="token variable">$procs</span> 执行在 <span class="token variable">$local_ip</span> 机器&quot;</span> <span class="token operator">|</span> mail <span class="token parameter variable">-s</span> 警告 root@localhost
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="新增用户密码-if-单分支语法" tabindex="-1"><a class="header-anchor" href="#新增用户密码-if-单分支语法" aria-hidden="true">#</a> 新增用户密码（if 单分支语法）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 新增用户密码（if 单分支语法）</span>

<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入用户名：&quot;</span> user
<span class="token builtin class-name">read</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入密码：&quot;</span> pass
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$user</span>&quot;</span> <span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$pass</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token function">useradd</span> <span class="token string">&quot;<span class="token variable">$user</span>&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$pass</span>&quot;</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token string">&quot;<span class="token variable">$user</span>&quot;</span>
<span class="token keyword">fi</span>
<span class="token builtin class-name">echo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ping主机-if-双分支判断" tabindex="-1"><a class="header-anchor" href="#ping主机-if-双分支判断" aria-hidden="true">#</a> ping主机（if 双分支判断）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># ping主机（if 双分支判断）</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">&quot;用法：脚本&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\033">\\033</span>[32m域名或IP<span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
  <span class="token builtin class-name">exit</span>
<span class="token keyword">fi</span>

<span class="token function">ping</span> <span class="token parameter variable">-c2</span> <span class="token parameter variable">-i0.1</span> <span class="token parameter variable">-W1</span> <span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> <span class="token operator">&amp;&gt;</span>/dev/null
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$1</span> 能够ping通&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$1</span> 不能够ping通&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="猜随机数-if-多分支判断" tabindex="-1"><a class="header-anchor" href="#猜随机数-if-多分支判断" aria-hidden="true">#</a> 猜随机数（if 多分支判断）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 脚本自动生成10以内的随机数，根据用户的输入，输出判断结果。（每次脚本执行只能猜一次）</span>

<span class="token function">clear</span>
<span class="token assign-left variable">num</span><span class="token operator">=</span>$<span class="token punctuation">[</span><span class="token environment constant">RANDOM</span>%10+1<span class="token punctuation">]</span>
<span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入1-10之间的整数：&quot;</span> guess
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$geuss</span> <span class="token parameter variable">-eq</span> <span class="token variable">$num</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;恭喜猜对了就是：<span class="token variable">$num</span>&quot;</span>
<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$geuss</span> <span class="token parameter variable">-lt</span> <span class="token variable">$num</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;猜小了&quot;</span>
<span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;猜大了&quot;</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环创建系统账户-for-循环" tabindex="-1"><a class="header-anchor" href="#循环创建系统账户-for-循环" aria-hidden="true">#</a> 循环创建系统账户（for 循环）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 循环创建系统账户（for 循环）</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">10</span><span class="token punctuation">}</span>
<span class="token keyword">do</span>
  <span class="token function">useradd</span> <span class="token builtin class-name">test</span><span class="token variable">$i</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;123456&quot;</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token builtin class-name">test</span><span class="token variable">$i</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="批量创建系统账户-for-循环" tabindex="-1"><a class="header-anchor" href="#批量创建系统账户-for-循环" aria-hidden="true">#</a> 批量创建系统账户（for 循环）</h3><p>user.txt</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>huang
jin
liang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 批量创建系统账户（for 循环）</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> user.txt<span class="token variable">)</span></span>
<span class="token keyword">do</span>
  <span class="token function">useradd</span> <span class="token string">&quot;<span class="token variable">$i</span>&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;123456&quot;</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token string">&quot;<span class="token variable">$i</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-9乘法表-for-循环" tabindex="-1"><a class="header-anchor" href="#_9-9乘法表-for-循环" aria-hidden="true">#</a> 9*9乘法表（for 循环）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 9*9乘法表（for 循环）</span>

<span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">9</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span>
<span class="token keyword">do</span>
  <span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">))</span></span>
  <span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token string">&quot; <span class="token variable">$i</span>*<span class="token variable">$j</span>=$[i*j] &quot;</span>
  <span class="token keyword">done</span>
  <span class="token builtin class-name">echo</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环创建系统账户-while-循环" tabindex="-1"><a class="header-anchor" href="#循环创建系统账户-while-循环" aria-hidden="true">#</a> 循环创建系统账户（while 循环）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 循环创建系统账户（while 循环）</span>
<span class="token assign-left variable">PREFIX</span><span class="token operator">=</span><span class="token string">&quot;tuser&quot;</span> <span class="token punctuation">;</span> <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">1</span>

<span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$i</span> <span class="token parameter variable">-le</span> <span class="token number">5</span> <span class="token punctuation">]</span>
<span class="token keyword">do</span>
  <span class="token function">useradd</span> <span class="token variable">\${PREFIX}</span><span class="token variable">$i</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;123456&quot;</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token variable">\${PREFIX}</span><span class="token variable">$i</span> <span class="token operator">&amp;&gt;</span> /dev/null
  <span class="token builtin class-name">let</span> i++
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="猜随机数-while-循环" tabindex="-1"><a class="header-anchor" href="#猜随机数-while-循环" aria-hidden="true">#</a> 猜随机数（while 循环）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 脚本自动生成10以内的随机数，根据用户的输入，输出判断结果（可猜多次）</span>
<span class="token assign-left variable">num</span><span class="token operator">=</span>$<span class="token punctuation">[</span><span class="token environment constant">RANDOM</span>%10+1<span class="token punctuation">]</span>

<span class="token keyword">while</span> <span class="token builtin class-name">:</span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">read</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;请输入1-10之间的整数：&quot;</span> guess
  <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$geuss</span> <span class="token parameter variable">-eq</span> <span class="token variable">$num</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;恭喜猜对了就是：<span class="token variable">$num</span>&quot;</span>
    <span class="token builtin class-name">exit</span> <span class="token comment"># 猜中后结束脚本</span>
  <span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$geuss</span> <span class="token parameter variable">-lt</span> <span class="token variable">$num</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;猜小了&quot;</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;猜大了&quot;</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="一键部署ftp服务" tabindex="-1"><a class="header-anchor" href="#一键部署ftp服务" aria-hidden="true">#</a> 一键部署FTP服务</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 安装 vsftpd 软件，修改配置文件，设置匿名用户上传文件</span>

<span class="token keyword">if</span> <span class="token function">rpm</span> <span class="token parameter variable">-q</span> vsfitd <span class="token operator">&amp;&gt;</span> /dev/numm<span class="token punctuation">;</span><span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;vsfitd已安装&quot;</span>
<span class="token keyword">else</span>
  yum <span class="token parameter variable">-y</span> <span class="token function">install</span> vsfitd
<span class="token keyword">fi</span>
systemctl restart vaftpd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="监控网络流量" tabindex="-1"><a class="header-anchor" href="#监控网络流量" aria-hidden="true">#</a> 监控网络流量</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 监控网络流量</span>
<span class="token keyword">while</span> <span class="token builtin class-name">:</span>
<span class="token keyword">do</span>
  <span class="token function">clear</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&#39;本地网卡eth0流量信息如下：&#39;</span>
  <span class="token function">ifconfig</span> eth0 <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;RX pack&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> -s<span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&quot; &quot;</span> <span class="token parameter variable">-f6</span>
  <span class="token function">ifconfig</span> eth0 <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;TX pack&quot;</span> <span class="token operator">|</span> <span class="token function">tr</span> -s<span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&quot; &quot;</span> <span class="token parameter variable">-f6</span>
  <span class="token function">sleep</span> <span class="token number">1</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="统计闰年" tabindex="-1"><a class="header-anchor" href="#统计闰年" aria-hidden="true">#</a> 统计闰年</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 判断有序的数字是否是闰年</span>
<span class="token comment"># 条件1：能被4整除但不能被100整除。条件2：能被400整除。</span>
<span class="token comment"># 满足条件1或条件2之一就是闰年</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">2000</span><span class="token punctuation">..</span><span class="token number">5000</span><span class="token punctuation">}</span>
<span class="token keyword">do</span>
  <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">[</span>i%4<span class="token punctuation">]</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> $<span class="token punctuation">[</span>i%100<span class="token punctuation">]</span> <span class="token parameter variable">-ne</span>  <span class="token number">0</span> <span class="token operator">||</span> $<span class="token punctuation">[</span>i%400<span class="token punctuation">]</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$i</span>：是闰年&quot;</span>
  <span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$i</span>：非闰年&quot;</span>
  <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="计算等差数列之和" tabindex="-1"><a class="header-anchor" href="#计算等差数列之和" aria-hidden="true">#</a> 计算等差数列之和</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># 计算等差数列之和1+2+3+4+5,...,+100</span>

<span class="token assign-left variable">sum</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$i</span> <span class="token parameter variable">-le</span> <span class="token number">100</span> <span class="token punctuation">]</span>
<span class="token keyword">do</span>
  <span class="token builtin class-name">let</span> <span class="token assign-left variable">sum</span><span class="token operator">+=</span><span class="token variable">$i</span>
  <span class="token builtin class-name">let</span> i++
<span class="token keyword">done</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;1+2+3+4+5,...,+100的总和为：<span class="token entity" title="\\033">\\033</span>[1;32m<span class="token variable">$sum</span><span class="token entity" title="\\033">\\033</span>[0m&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,74),i=[t];function p(o,c){return a(),n("div",null,i)}const d=s(l,[["render",p],["__file","判断和循环.html.vue"]]);export{d as default};
